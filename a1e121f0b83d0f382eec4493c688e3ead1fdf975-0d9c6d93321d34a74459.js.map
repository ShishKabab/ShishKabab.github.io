{"version":3,"sources":["webpack:///./src/components/vincent-style.tsx","webpack:///./src/components/toggle-list.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/construct.js","webpack:///./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack:///./node_modules/prism-react-renderer/prism/index.js","webpack:///./node_modules/prism-react-renderer/dist/index.js","webpack:///./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./node_modules/prism-react-renderer/themes/github/index.js","webpack:///./src/components/code-block.tsx","webpack:///./src/utils.tsx","webpack:///./src/components/layout-markdown.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Styled","styled","span","VincentStyle","props","children","ListItemBullet","div","rotate","css","ListItemContent","ToggleList","state","itemsExpanded","toggle","key","this","setState","renderItem","item","hasChildren","length","expanded","right","onClick","undefined","content","map","node","left","child","render","bottom","React","Component","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_getPrototypeOf","getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_cache","Map","fn","indexOf","has","get","set","Wrapper","enumerable","uniqueId","_","Token","Prism","util","encode","tokens","type","alias","replace","match","objId","obj","defineProperty","clone","visited","hasOwnProperty","forEach","v","i","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","hooks","run","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","target","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","source","pos","str","lastIndex","exec","from","to","k","len","delNum","slice","after","wrapped","Array","splice","add","name","rest","matchedStr","parent","element","join","tag","classes","attributes","aliases","keys","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","variable","toBeCopied","shell","clike","c","keyword","cpp","string","addInlined","selectorInside","selector","unit","number","javascript","regex","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","withId","unshift","maybeClassNameTokens","comment","interpolation","coffeescript","coffee","diff","PREFIXES","prefix","test","git","go","graphql","markdown","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","t","s","substring","middle","replacement","concat","handlebars","punctuation","json","webmanifest","less","makefile","inner","createInline","tableCell","tableRow","tableLine","yaml","l","codeLang","codeBlock","toLowerCase","cls","autoloader","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","md","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","property","scss","sql","stylus","func","typescript","typeInside","ts","tsx","wasm","anchorOrAlias","properties","plainKey","createValuePattern","yml","defaultProps","theme","plain","backgroundColor","color","styles","types","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","this$1","prevTheme","prevLanguage","ref","className","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","CodeBlock","matches","trim","groups","padding","getPostHeaderSubtext","frontmatter","date","publishedWhen","createdWhen","isPublished","dateString","toLocaleDateString","weekday","year","month","day","author","href","MarkdownLayout","pageContext","title","level","subtext","components","h1","Error","h2","h3","pre","Children","displayName","mdxType","path","startsWith","parsed","parseMdxListRoot","generateKey","nodes","listItem","parseMdxListItem","_objectWithoutPropertiesLoose","excluded","sourceKeys"],"mappings":"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","file":"a1e121f0b83d0f382eec4493c688e3ead1fdf975-0d9c6d93321d34a74459.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Styled = styled.span`\n    background: #ff0;\n    padding: 5px;\n    font-weight: bold;\n`\n\nexport default function VincentStyle(props: { children: React.ReactNode }) {\n    return <Styled>{props.children}</Styled>\n}\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\n\nexport interface ToggleListItem {\n  key: string\n  content: Array<{ key: string; node: React.ReactNode }>\n  children: ToggleListItem[]\n}\n\nconst ListItemBullet = styled.div<{ rotate?: string }>`\n  width: 10px;\n  cursor: pointer;\n  transition: transform 0.15s linear;\n  ${props =>\n    props.rotate\n      ? css`\n          transform: rotate(${props.rotate});\n        `\n      : null}\n`\n\nconst ListItemContent = styled.div`\n  display: flex;\n`\n\ninterface State {\n  itemsExpanded: { [key: string]: boolean }\n}\n\nexport default class ToggleList extends React.Component<\n  {\n    children: ToggleListItem[]\n  },\n  State\n> {\n  state: State = {\n    itemsExpanded: {},\n  }\n\n  toggle(key: string) {\n    this.setState({\n      itemsExpanded: {\n        ...this.state.itemsExpanded,\n        [key]: !this.state.itemsExpanded[key],\n      },\n    })\n  }\n\n  renderItem(item: ToggleListItem) {\n    const hasChildren = !!item.children.length\n    const expanded = !!this.state.itemsExpanded[item.key]\n    return (\n      <div key={item.key}>\n        <ListItemContent>\n          <Margin right=\"medium\">\n            {!hasChildren && <ListItemBullet>&#8226;</ListItemBullet>}\n            {hasChildren && (\n              <ListItemBullet\n                onClick={() => this.toggle(item.key)}\n                rotate={expanded ? \"90deg\" : undefined}\n              >\n                &#8227;\n              </ListItemBullet>\n            )}\n          </Margin>\n          <div>{item.content.map(content => content.node)}</div>\n        </ListItemContent>\n        {expanded && (\n          <Margin left=\"largest\">\n            {item.children.map(child => this.renderItem(child))}\n          </Margin>\n        )}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Margin bottom=\"medium\">\n        {this.props.children.map(child => this.renderItem(child))}\n      </Margin>\n    )\n  }\n}\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function type(o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function objId(obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function clone(o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Insert a token before another token in a language literal\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n       * we cannot just provide an object, we need anobject and a key.\n       * @param inside The key (or language id) of the parent\n       * @param before The key to insert before. If not provided, the function appends instead.\n       * @param insert Object with the key/value pairs to insert\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run(\"before-tokenize\", env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run(\"after-tokenize\", env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function matchGrammar(text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function add() {},\n      run: function run(name, env) {}\n    },\n    tokenize: function tokenize(text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|(?!\\2)[^\\\\`$])*\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'function': /[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, Prism.languages.c['string']],\n      'comment': Prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: Prism.languages.c\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:true|false)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'operator', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(Prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n        lookbehind: true,\n        inside: {\n          'attr-value': {\n            pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n            inside: {\n              'style': {\n                pattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n                lookbehind: true,\n                alias: 'language-css',\n                inside: Prism.languages.css\n              },\n              'punctuation': [{\n                pattern: /^=/,\n                alias: 'attr-equals'\n              }, /\"|'/]\n            }\n          },\n          'attr-name': /^style/i\n        }\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+\\b)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#(?:[\\da-f]{1,2}){3,4}\\b/i,\n      alias: 'color'\n    },\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(Prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: Prism.languages.regex\n      },\n      'regex-flags': /[a-z]+$/,\n      'regex-delimiter': /^\\/|\\/$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+(?:\\s+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[^]|[^\\\\\"])*\"|'(?:\\\\[^]|[^\\\\'])*'|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-graphql\" */\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: Prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nPrism.languages.webmanifest = Prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?!\\n|\\r\\n?))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'font-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-objectivec\" */\n\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\nPrism.languages.objc = Prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'important'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'function'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'variable'\n  },\n  'module': {\n    pattern: /\\b[A-Z]\\w+/,\n    alias: 'variable'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/im,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|with|show|hide)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /url\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n    'keyword': /\\b(?:abstract|as|asserts|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n    'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n  }); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(Prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|]|}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/true|false/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(Prism);\n\nexport default Prism;","import \"core-js/modules/es.array.reduce\";\nimport Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\nexport default theme;","import React from \"react\"\nimport Highlight, { defaultProps } from \"prism-react-renderer\"\nimport theme from \"prism-react-renderer/themes/github\"\n\nexport default function CodeBlock(props: { children: any }) {\n    const className = props.children.props.className || \"\"\n    const matches = className.match(/language-(?<lang>.*)/)\n    return (\n        <Highlight\n            {...defaultProps}\n            code={props.children.props.children.trim()}\n            language={\n                matches && matches.groups && matches.groups.lang\n                    ? matches.groups.lang\n                    : \"\"\n            }\n            theme={theme}\n        >\n            {({ className, style, tokens, getLineProps, getTokenProps }) => (\n                <pre\n                    className={className}\n                    style={{ ...style, padding: \"20px\" }}\n                >\n                    {tokens.map((line, i) => (\n                        <div key={i} {...getLineProps({ line, key: i })}>\n                            {line.map((token, key) => (\n                                <span\n                                    key={key}\n                                    {...getTokenProps({ token, key })}\n                                />\n                            ))}\n                        </div>\n                    ))}\n                </pre>\n            )}\n        </Highlight>\n    )\n}\n","import React from \"react\"\nimport VincentStyle from \"./components/vincent-style\"\n\nexport function getPostHeaderSubtext(frontmatter: {\n    publishedWhen?: string\n    createdWhen: string\n}) {\n    const date = new Date(frontmatter.publishedWhen ?? frontmatter.createdWhen)\n    const isPublished = !!frontmatter.publishedWhen\n    const dateString = date.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n    })\n    const author = (\n        <>\n            by{\" \"}\n            <a href=\"/\">\n                <VincentStyle>Vincent den Boer</VincentStyle>\n            </a>\n        </>\n    )\n    return (\n        <>\n            {isPublished ? dateString : `Draft created on ${dateString}`}\n            &nbsp;\n            {author}\n        </>\n    )\n}\n","import React from \"react\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport Layout from \"./layout\"\nimport Heading from \"./heading\"\nimport Paragraph from \"./paragraph\"\nimport ToggleList, { ToggleListItem } from \"./toggle-list\"\nimport CodeBlock from \"./code-block\"\nimport { getPostHeaderSubtext } from \"../utils\"\nimport SEO from \"./seo\"\n\nexport default function MarkdownLayout(props: {\n    children: React.ReactNode\n    path: string\n    pageContext: any\n}) {\n    const { frontmatter } = props.pageContext\n    const { title } = frontmatter\n    return (\n        <Layout>\n            <SEO title={title} />\n            <Heading level={1} subtext={getPostHeaderSubtext(frontmatter)}>\n                {title}\n            </Heading>\n            <MDXProvider\n                components={{\n                    h1: () => {\n                        throw new Error(\n                            `Shouldn't use H1 in Markdown article bodies`\n                        )\n                    },\n                    h2: props => <Heading level={2}>{props.children}</Heading>,\n                    h3: props => <Heading level={3}>{props.children}</Heading>,\n                    p: props => <Paragraph>{props.children}</Paragraph>,\n                    pre: CodeBlock,\n                }}\n            >\n                {React.Children.map(props.children, child => {\n                    if (!child || typeof child !== \"object\") {\n                        return child\n                    }\n                    if (!(\"type\" in child && \"props\" in child)) {\n                        return child\n                    }\n                    if (\n                        (child.type as any).displayName !==\n                            \"MDXCreateElement\" ||\n                        child.props.mdxType !== \"ul\"\n                    ) {\n                        return child\n                    }\n                    if (!props.path.startsWith(\"/thoughts-in-progress/\")) {\n                        return child\n                    }\n\n                    let key = 0\n                    const parsed = parseMdxListRoot(child, () => `${key++}`)\n                    return <ToggleList children={parsed} />\n                })}\n            </MDXProvider>\n        </Layout>\n    )\n}\n\nexport function parseMdxListRoot(\n    element: React.ReactElement,\n    generateKey: () => string\n) {\n    const nodes: ToggleListItem[] = []\n    let children = element.props.children\n    if (!(children instanceof Array)) {\n        children = [children]\n    }\n\n    for (const listItem of children) {\n        if (listItem.props.mdxType !== \"li\") {\n            continue\n        }\n\n        nodes.push(parseMdxListItem(listItem, generateKey))\n    }\n\n    return nodes\n}\n\nexport function parseMdxListItem(\n    element: React.ReactElement,\n    generateKey: () => string\n): ToggleListItem {\n    if (typeof element.props.children === \"string\") {\n        return {\n            content: [{ key: generateKey(), node: element.props.children }],\n            children: [],\n            key: generateKey(),\n        }\n    }\n\n    const item: ToggleListItem = {\n        content: [],\n        children: [],\n        key: generateKey(),\n    }\n    let children = element.props.children\n    if (!(children instanceof Array)) {\n        children = [children]\n    }\n    for (const child of children) {\n        if (typeof child === \"string\") {\n            item.content.push({ key: generateKey(), node: child })\n            continue\n        }\n        if (child.props.mdxType !== \"ul\") {\n            item.content.push({ key: generateKey(), node: child })\n            continue\n        }\n        item.children = parseMdxListRoot(child, generateKey)\n    }\n    return item\n}\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}