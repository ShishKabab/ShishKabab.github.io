{"version":3,"sources":["webpack:///./src/components/heading.tsx","webpack:///./src/components/page-title.tsx","webpack:///./src/components/subititle.tsx","webpack:///./src/features/posts/utils.ts","webpack:///./src/features/posts/components.tsx","webpack:///./src/components/paragraph.tsx","webpack:///./src/pages/blog/index.tsx"],"names":["Heading1","styled","h1","Heading2","h2","Heading","props","level","bottom","Error","PageTitle","title","children","StyledSubtitle","div","theme","subtitle","Subtitle","ArticleList","spacing","large","ArticleLink","Link","PostIndex","items","data","allMdx","edges","filter","edge","node","slug","startsWith","path","map","frontmatter","createdWhen","Date","publishedWhen","preview","sort","left","right","getTime","getPostsFromQuery","description","item","published","key","PostPreview","publishedString","toLocaleDateString","weekday","year","month","day","to","StyledParagraph","p","Paragraph","query","BlogIndex"],"mappings":"6FAAA,iDAIMA,EAAWC,UAAOC,GAAV,wEAAGD,CAAH,6BAKRE,EAAWF,UAAOG,GAAV,wEAAGH,CAAH,+BAuBCI,IAlBC,SAACC,GAAyD,MAChEC,EAAK,UAAGD,EAAMC,aAAT,QAAkB,EAC7B,GAAc,IAAVA,EACA,OACI,kBAAC,SAAD,CAAQC,OAAO,UACX,kBAACR,EAAaM,IAGnB,GAAc,IAAVC,EACP,OACI,kBAAC,SAAD,CAAQC,OAAO,UACX,kBAACL,EAAaG,IAI1B,MAAM,IAAIG,MAAJ,gCAA0CH,EAAMC,S,qKCT3CG,EATG,SAACJ,GACjB,OACE,oCACI,kBAAC,IAAD,CAAKK,MAAOL,EAAMM,WAClB,kBAAC,IAAD,KAAUN,EAAMM,Y,YCZlBC,EAAiBZ,UAAOa,IAAV,gFAAGb,CAAH,gCAEP,SAAAK,GAAK,OAAIA,EAAMS,MAAMC,YAGnB,SAASC,EAASX,GAC7B,OAAO,kBAACO,EAAD,KAAiBP,EAAMM,UCkB3B,ICdDM,EAAcjB,UAAOa,IAAV,6EAAGb,CAAH,+BACM,SAAAK,GAAK,OAAIA,EAAMS,MAAMI,QAAQC,SAG9CC,EAAcpB,kBAAOqB,QAAV,6EAAGrB,CAAH,yCAKJsB,EAAY,SAACjB,GAMtB,IAAMkB,ED1BH,SAA2BlB,GAAY,IAEpCkB,EADYlB,EAAMmB,KAAKC,OAArBC,MAEHC,QAAO,SAAAC,GAEJ,OAAQ,IADSA,EAAKC,KAAdC,MACYC,WAAW1B,EAAM2B,SAExCC,KAAI,SAAAL,GAAQ,IACDC,EAASD,EAATC,KACAK,EAAgBL,EAAhBK,YAER,MAAO,CACHC,YAFgB,IAAIC,KAAKF,EAAYC,aAGrCL,KAAMD,EAAKC,KACXpB,MAAOwB,EAAYxB,MACnB2B,cAAeH,EAAYG,cAC3BC,QAASJ,EAAYI,YAMjC,OAHAf,EAAMgB,MAAK,SAACC,EAAMC,GACd,OAAOD,EAAKL,YAAYO,UAAYD,EAAMN,YAAYO,UAAY,GAAK,KAEpEnB,ECIOoB,CAAkBtC,GAChC,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KAAYA,EAAMK,OACjBL,EAAMuC,aAAe,kBAAC,IAAD,KAAYvC,EAAMuC,aACxC,kBAAC3B,EAAD,KACKM,EAAMU,KAAI,SAAAY,GACP,IAAMC,EAAY,IAAIV,KAAKS,EAAKR,eAChC,OACI,kBAAC,SAAD,CAAQU,IAAKF,EAAKf,KAAMvB,OAAO,UAC3B,kBAAC,EAAD,CACIuB,KAAMe,EAAKf,KACXpB,MAAOmC,EAAKnC,MACZ2B,cAAeS,EACfR,QAASO,EAAKP,iBAUjCU,EAAc,SAAC3C,GAMxB,IAAM4C,EAAkB5C,EAAMgC,cAAca,mBAAmB,QAAS,CACpEC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAET,OACI,kBAAClC,EAAD,CAAamC,GAAE,IAAMlD,EAAMyB,MACvB,kBAAC,IAAD,CAASxB,MAAO,GAAID,EAAMK,OAC1B,kBAAC,SAAD,CAAQH,OAAO,SACX,kBAACS,EAAD,KAAWiC,IAEf,kBAAC,IAAD,KAAY5C,EAAMiC,Y,kCCtE9B,iDAWMkB,EAAkBxD,UAAOyD,EAAV,iFAAGzD,CAAH,eAYN0D,IARG,SAACrD,GACjB,OACE,kBAAC,SAAD,CAAQE,OAAO,UACb,kBAACiD,EAAoBnD,M,kCCjB3B,kFAOasD,EAAQ,aAkBNC,UAtBG,SAACvD,GACf,OAAO,kBAAC,IAAD,iBAAeA,EAAf,CAAsBK,MAAO","file":"component---src-pages-blog-index-tsx-39cd383af909f27b1608.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\n\nconst Heading1 = styled.h1`\n    font-size: 2em;\n    margin: 0;\n`\n\nconst Heading2 = styled.h2`\n    font-size: 1.5em;\n    margin: 0;\n`\n\nconst Heading = (props: { children: React.ReactNode; level?: number }) => {\n    const level = props.level ?? 1\n    if (level === 1) {\n        return (\n            <Margin bottom=\"medium\">\n                <Heading1 {...props} />\n            </Margin>\n        )\n    } else if (level === 2) {\n        return (\n            <Margin bottom=\"medium\">\n                <Heading2 {...props} />\n            </Margin>\n        )\n    }\n    throw new Error(`Unsupported <Heading> level: ${props.level}`)\n}\n\nexport default Heading\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Heading from \"./heading\"\nimport SEO from \"./seo\"\n\nconst PageTitle = (props: { children: string }) => {\n  return (\n    <>\n        <SEO title={props.children} />\n        <Heading>{props.children}</Heading>\n    </>\n  )\n}\n\nexport default PageTitle\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledSubtitle = styled.div`\n    font-size: 0.8em;\n    color: ${props => props.theme.subtitle};\n`\n\nexport default function Subtitle(props: { children: React.ReactNode }) {\n    return <StyledSubtitle>{props.children}</StyledSubtitle>\n}\n","import { graphql } from \"gatsby\"\n\nexport function getPostsFromQuery(props: any) {\n    const { edges } = props.data.allMdx\n    const items = (edges as any[])\n        .filter(edge => {\n            const { slug } = edge.node\n            return (\"/\" + slug).startsWith(props.path)\n        })\n        .map(edge => {\n            const { node } = edge\n            const { frontmatter } = node\n            const createdWhen = new Date(frontmatter.createdWhen)\n            return {\n                createdWhen,\n                slug: node.slug as string,\n                title: frontmatter.title as string,\n                publishedWhen: frontmatter.publishedWhen as any,\n                preview: frontmatter.preview as string,\n            }\n        })\n    items.sort((left, right) => {\n        return left.createdWhen.getTime() < right.createdWhen.getTime() ? 1 : -1\n    })\n    return items\n}\n\nexport const allPostsQuery = graphql`\n{\n    allMdx {\n        edges {\n            node {\n                slug\n                frontmatter {\n                    title\n                    preview\n                    publishedWhen\n                }\n            }\n        }\n    }\n}\n`","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\nimport Heading from \"../../components/heading\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport PageTitle from \"../../components/page-title\"\nimport Paragraph from \"../../components/paragraph\"\nimport Subtitle from \"../../components/subititle\"\nimport { getPostsFromQuery } from \"../../features/posts/utils\"\n\nconst ArticleList = styled.div`\n    margin-top: calc(${props => props.theme.spacing.large} * 4);\n`\n\nconst ArticleLink = styled(Link)`\n    color: inherit;\n    text-decoration: none;\n`\n\nexport const PostIndex = (props: {\n    data: any\n    path: string\n    title: string\n    description?: React.ReactNode\n}) => {\n    const items = getPostsFromQuery(props)\n    return (\n        <Layout>\n            <PageTitle>{props.title}</PageTitle>\n            {props.description && <Paragraph>{props.description}</Paragraph>}\n            <ArticleList>\n                {items.map(item => {\n                    const published = new Date(item.publishedWhen)\n                    return (\n                        <Margin key={item.slug} bottom=\"medium\">\n                            <PostPreview\n                                slug={item.slug}\n                                title={item.title}\n                                publishedWhen={published}\n                                preview={item.preview}\n                            />\n                        </Margin>\n                    )\n                })}\n            </ArticleList>\n        </Layout>\n    )\n}\n\nexport const PostPreview = (props: {\n    slug: string\n    title: string\n    publishedWhen: Date\n    preview: React.ReactNode\n}) => {\n    const publishedString = props.publishedWhen.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n    })\n    return (\n        <ArticleLink to={`/${props.slug}`}>\n            <Heading level={2}>{props.title}</Heading>\n            <Margin bottom=\"large\">\n                <Subtitle>{publishedString}</Subtitle>\n            </Margin>\n            <Paragraph>{props.preview}</Paragraph>\n        </ArticleLink>\n    )\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\n\nconst StyledParagraph = styled.p`\n  margin: 0;\n`\n\nconst Paragraph = (props: { children: React.ReactNode }) => {\n  return (\n    <Margin bottom=\"medium\">\n      <StyledParagraph {...props} />\n    </Margin>\n  )\n}\n\nexport default Paragraph\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { PostIndex } from \"../../features/posts/components\"\n\nconst BlogIndex = (props: any) => {\n    return <PostIndex {...props} title={\"Blog\"} />\n}\n\nexport const query = graphql`\n    {\n        allMdx {\n            edges {\n                node {\n                    slug\n                    frontmatter {\n                        title\n                        preview\n                        createdWhen\n                        publishedWhen\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default BlogIndex\n"],"sourceRoot":""}