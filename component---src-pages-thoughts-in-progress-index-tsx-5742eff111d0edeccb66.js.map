{"version":3,"sources":["webpack:///./src/pages/thoughts-in-progress/index.tsx","webpack:///./src/components/subititle.tsx","webpack:///./src/components/heading.tsx","webpack:///./src/components/page-title.tsx","webpack:///./src/features/posts/utils.ts","webpack:///./src/features/posts/components.tsx","webpack:///./src/components/paragraph.tsx"],"names":["query","ThoughtIndex","props","title","description","StyledSubtitle","styled","div","theme","subtitle","Subtitle","children","HEADINGS","1","h1","2","h2","Heading","level","heading","Error","margin","bottom","React","createElement","subtext","top","PageTitle","ArticleList","spacing","large","ArticleLink","Link","PostIndex","items","data","allMdx","edges","filter","edge","node","slug","startsWith","path","map","frontmatter","createdWhen","Date","publishedWhen","preview","sort","left","right","getTime","getPostsFromQuery","item","published","key","PostPreview","publishedString","toLocaleDateString","weekday","year","month","day","to","StyledParagraph","p","Paragraph"],"mappings":"8FACA,kFAmBaA,EAAQ,aAkBNC,UAlCM,SAACC,GAClB,OACI,kBAAC,IAAD,iBACQA,EADR,CAEIC,MAAO,uBACPC,YACI,0N,qFCPVC,EAAiBC,UAAOC,IAAV,gFAAGD,CAAH,gCAEP,SAAAJ,GAAK,OAAIA,EAAMM,MAAMC,YAGnB,SAASC,EAASR,GAC7B,OAAO,kBAACG,EAAD,KAAiBH,EAAMS,UCAlC,IAYMC,EAAW,CACbC,EAbaP,UAAOQ,GAAV,wEAAGR,CAAH,gDAcVS,EARaT,UAAOU,GAAV,wEAAGV,CAAH,iDAmCCW,IAxBC,SAACf,GAIX,MACIgB,EAAK,UAAGhB,EAAMgB,aAAT,QAAkB,EACvBC,EAAUP,EAASM,GACzB,IAAKC,EACD,MAAM,IAAIC,MAAJ,gCAA0ClB,EAAMgB,OAE1D,IAAMG,EACQ,IAAVH,EAAc,QAAU,SAC5B,OACI,kBAAC,SAAD,CAAQI,OAAQD,GACXE,IAAMC,cAAcL,EAASjB,GAC7BA,EAAMuB,SACH,kBAAC,SAAD,CAAQC,IAAI,SACR,kBAAChB,EAAD,KAAWR,EAAMuB,a,qKCvBtBE,EATG,SAACzB,GACjB,OACE,oCACI,kBAAC,IAAD,CAAKC,MAAOD,EAAMS,WAClB,kBAAC,IAAD,KAAUT,EAAMS,Y,YCYjB,ICdDiB,EAActB,UAAOC,IAAV,6EAAGD,CAAH,+BACM,SAAAJ,GAAK,OAAIA,EAAMM,MAAMqB,QAAQC,SAG9CC,EAAczB,kBAAO0B,QAAV,6EAAG1B,CAAH,yCAKJ2B,EAAY,SAAC/B,GAMtB,IAAMgC,ED1BH,SAA2BhC,GAAY,IAEpCgC,EADYhC,EAAMiC,KAAKC,OAArBC,MAEHC,QAAO,SAAAC,GAEJ,OAAQ,IADSA,EAAKC,KAAdC,MACYC,WAAWxC,EAAMyC,SAExCC,KAAI,SAAAL,GAAQ,IACDC,EAASD,EAATC,KACAK,EAAgBL,EAAhBK,YAER,MAAO,CACHC,YAFgB,IAAIC,KAAKF,EAAYC,aAGrCL,KAAMD,EAAKC,KACXtC,MAAO0C,EAAY1C,MACnB6C,cAAeH,EAAYG,cAC3BC,QAASJ,EAAYI,YAMjC,OAHAf,EAAMgB,MAAK,SAACC,EAAMC,GACd,OAAOD,EAAKL,YAAYO,UAAYD,EAAMN,YAAYO,UAAY,GAAK,KAEpEnB,ECIOoB,CAAkBpD,GAChC,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,KAAYA,EAAMC,OACjBD,EAAME,aAAe,kBAAC,IAAD,KAAYF,EAAME,aACxC,kBAACwB,EAAD,KACKM,EAAMU,KAAI,SAAAW,GACP,IAAMC,EAAY,IAAIT,KAAKQ,EAAKP,eAChC,OACI,kBAAC,SAAD,CAAQS,IAAKF,EAAKd,KAAMnB,OAAO,UAC3B,kBAAC,EAAD,CACImB,KAAMc,EAAKd,KACXtC,MAAOoD,EAAKpD,MACZ6C,cAAeQ,EACfP,QAASM,EAAKN,iBAUjCS,EAAc,SAACxD,GAMxB,IAAMyD,EAAkBzD,EAAM8C,cAAcY,mBAAmB,QAAS,CACpEC,QAAS,OACTC,KAAM,UACNC,MAAO,OACPC,IAAK,YAET,OACI,kBAACjC,EAAD,CAAakC,GAAE,IAAM/D,EAAMuC,MACvB,kBAAC,IAAD,CAASvB,MAAO,EAAGO,QAASkC,GACvBzD,EAAMC,OAEX,kBAAC,IAAD,KAAYD,EAAM+C,Y,kCCrE9B,iDAWMiB,EAAkB5D,UAAO6D,EAAV,iFAAG7D,CAAH,eAYN8D,IARG,SAAClE,GACjB,OACE,kBAAC,SAAD,CAAQoB,OAAO,UACb,kBAAC4C,EAAoBhE","file":"component---src-pages-thoughts-in-progress-index-tsx-5742eff111d0edeccb66.js","sourcesContent":["import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport { PostIndex } from \"../../features/posts/components\"\n\nconst ThoughtIndex = (props: any) => {\n    return (\n        <PostIndex\n            {...props}\n            title={\"Thoughts in progress\"}\n            description={\n                <>\n                    Here I collect things I'm thinking about and may grow into\n                    articles over time, so I can collect feedback from other\n                    people and generate discussion as I reseach these topics.\n                </>\n            }\n        />\n    )\n}\n\nexport const query = graphql`\n    {\n        allMdx {\n            edges {\n                node {\n                    slug\n                    frontmatter {\n                        title\n                        preview\n                        createdWhen\n                        publishedWhen\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default ThoughtIndex\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst StyledSubtitle = styled.div`\n    font-size: 0.8em;\n    color: ${props => props.theme.subtitle};\n`\n\nexport default function Subtitle(props: { children: React.ReactNode }) {\n    return <StyledSubtitle>{props.children}</StyledSubtitle>\n}\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport {\n    DefaultSpacingBreakpoints,\n    Margin,\n    SpacingLength,\n} from \"styled-components-spacing\"\nimport Subtitle from \"./subititle\"\n\nconst Heading1 = styled.h1`\n    font-size: 1.8em;\n    margin: 0;\n    line-height: 150%;\n`\n\nconst Heading2 = styled.h2`\n    font-size: 1.4em;\n    margin: 0;\n    line-height: 150%;\n`\n\nconst HEADINGS = {\n    1: Heading1,\n    2: Heading2,\n}\n\nconst Heading = (props: {\n    children: React.ReactNode\n    subtext?: React.ReactNode\n    level?: number\n}) => {\n    const level = props.level ?? 1\n    const heading = HEADINGS[level as keyof typeof HEADINGS]\n    if (!heading) {\n        throw new Error(`Unsupported <Heading> level: ${props.level}`)\n    }\n    const margin: SpacingLength<DefaultSpacingBreakpoints> =\n        level === 1 ? \"large\" : \"medium\"\n    return (\n        <Margin bottom={margin}>\n            {React.createElement(heading, props)}\n            {props.subtext && (\n                <Margin top=\"small\">\n                    <Subtitle>{props.subtext}</Subtitle>\n                </Margin>\n            )}\n        </Margin>\n    )\n}\n\nexport default Heading\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Heading from \"./heading\"\nimport SEO from \"./seo\"\n\nconst PageTitle = (props: { children: string }) => {\n  return (\n    <>\n        <SEO title={props.children} />\n        <Heading>{props.children}</Heading>\n    </>\n  )\n}\n\nexport default PageTitle\n","import { graphql } from \"gatsby\"\n\nexport function getPostsFromQuery(props: any) {\n    const { edges } = props.data.allMdx\n    const items = (edges as any[])\n        .filter(edge => {\n            const { slug } = edge.node\n            return (\"/\" + slug).startsWith(props.path)\n        })\n        .map(edge => {\n            const { node } = edge\n            const { frontmatter } = node\n            const createdWhen = new Date(frontmatter.createdWhen)\n            return {\n                createdWhen,\n                slug: node.slug as string,\n                title: frontmatter.title as string,\n                publishedWhen: frontmatter.publishedWhen as any,\n                preview: frontmatter.preview as string,\n            }\n        })\n    items.sort((left, right) => {\n        return left.createdWhen.getTime() < right.createdWhen.getTime() ? 1 : -1\n    })\n    return items\n}\n\nexport const allPostsQuery = graphql`\n{\n    allMdx {\n        edges {\n            node {\n                slug\n                frontmatter {\n                    title\n                    preview\n                    publishedWhen\n                }\n            }\n        }\n    }\n}\n`","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\nimport Heading from \"../../components/heading\"\n// import { Link } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\nimport PageTitle from \"../../components/page-title\"\nimport Paragraph from \"../../components/paragraph\"\nimport Subtitle from \"../../components/subititle\"\nimport { getPostsFromQuery } from \"../../features/posts/utils\"\n\nconst ArticleList = styled.div`\n    margin-top: calc(${props => props.theme.spacing.large} * 4);\n`\n\nconst ArticleLink = styled(Link)`\n    color: inherit;\n    text-decoration: none;\n`\n\nexport const PostIndex = (props: {\n    data: any\n    path: string\n    title: string\n    description?: React.ReactNode\n}) => {\n    const items = getPostsFromQuery(props)\n    return (\n        <Layout>\n            <PageTitle>{props.title}</PageTitle>\n            {props.description && <Paragraph>{props.description}</Paragraph>}\n            <ArticleList>\n                {items.map(item => {\n                    const published = new Date(item.publishedWhen)\n                    return (\n                        <Margin key={item.slug} bottom=\"medium\">\n                            <PostPreview\n                                slug={item.slug}\n                                title={item.title}\n                                publishedWhen={published}\n                                preview={item.preview}\n                            />\n                        </Margin>\n                    )\n                })}\n            </ArticleList>\n        </Layout>\n    )\n}\n\nexport const PostPreview = (props: {\n    slug: string\n    title: string\n    publishedWhen: Date\n    preview: React.ReactNode\n}) => {\n    const publishedString = props.publishedWhen.toLocaleDateString(\"en-US\", {\n        weekday: \"long\",\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n    })\n    return (\n        <ArticleLink to={`/${props.slug}`}>\n            <Heading level={2} subtext={publishedString}>\n                {props.title}\n            </Heading>\n            <Paragraph>{props.preview}</Paragraph>\n        </ArticleLink>\n    )\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport styled from \"styled-components\"\nimport { Margin } from \"styled-components-spacing\"\n\nconst StyledParagraph = styled.p`\n  margin: 0;\n`\n\nconst Paragraph = (props: { children: React.ReactNode }) => {\n  return (\n    <Margin bottom=\"medium\">\n      <StyledParagraph {...props} />\n    </Margin>\n  )\n}\n\nexport default Paragraph\n"],"sourceRoot":""}